// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.187.0/containers/python-3
{
  "name": "Python 3",
  "build": {
    "dockerfile": "Dockerfile",
    "context": ".."
  },

  // Set *default* container specific settings.json values on container create.
  "customizations": {
    "vscode": {
      "settings": {
        "austin.mode": "Wall time",
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true,
        "esbonio.server.enabled": true,
        "esbonio.sphinx.confDir": "${workspaceFolder}/docs/source",
        "jupyter.widgetScriptSources": ["jsdelivr.com", "unpkg.com"],
        "prettier.prettierPath": "/usr/local/prettier",
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "[python]": {
          "editor.defaultFormatter": "ms-python.black-formatter",
          "editor.formatOnSave": true,
          "editor.codeActionsOnSave": {
            "source.organizeImports": true
          }
        },
        "isort.args": ["--settings-path", "${workspaceFolder}/setup.cfg"],
        "python.languageServer": "Pylance",
        // Line length to match black settings
        // Disabling specific messages:
        //  - To find the details do: /usr/local/py-utils/bin/pylint --list-msgs
        //  - Disable missing-module-docstring (C0114) because we don't document modules routinely, just their members
        //  - Disable invalid-name (C0103) because pylint thinks that eg 'x', 'df', 'np' are invalid due to their lengths
        "pylint.args": [
          "--max-line-length=120",
          "--disable=missing-module-docstring,invalid-name"
        ],
        "python.testing.pytestPath": "/usr/local/bin/pytest",
        "python.testing.pytestEnabled": true,
        "python.testing.cwd": "/workspaces/toba",
        // Scrolling the editor is a nice idea but it doesn't work, always out of sync and impossible to manage
        "restructuredtext.preview.scrollEditorWithPreview": false,
        "restructuredtext.preview.scrollPreviewWithEditor": false,
        "restructuredtext.linter.doc8.extraArgs": ["--max-line-length 180"],
        "terminal.integrated.defaultProfile.linux": "zsh"
      },

      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        "esbenp.prettier-vscode@2.2.1",
        "irongeek.vscode-env",
        "lextudio.restructuredtext",
        "me-dutour-mathieu.vscode-github-actions",
        "mikestead.dotenv",
        "ms-python.black-formatter",
        "ms-python.flake8",
        "ms-python.isort",
        "ms-python.mypy-type-checker",
        "ms-python.pylint",
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-renderers",
        "ms-toolsai.jupyter-keymap",
        "ms-vsliveshare.vsliveshare",
        "p403n1x87.austin-vscode",
        "ritwickdey.liveserver",
        "trond-snekvik.simple-rst",
        "ms-azuretools.vscode-docker"
      ]
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [80, 443, 7045, 7046, 7047, 7048, 7049, 8080],

  // Anything not done in the dockerfile
  "postCreateCommand": ". .devcontainer/postcreate.sh",

  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode"

  // Allow ptrace based debuggers (like austin) to work in the container
  // "runArgs": [
  //   "--env-file",
  //   "${localWorkspaceFolder}/.env",
  //   "--cap-add=SYS_PTRACE",
  //   "--security-opt",
  //   "seccomp=unconfined"
  // ]
}
